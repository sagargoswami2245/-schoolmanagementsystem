#include <stdio.h>
#include <string.h>

struct Student {
    int id;
    char name[50];
    char grade[50];
};

struct Student students[100];
int count = 0;

const char *filename = "students.txt";

void saveToFile()
{
    FILE *fp = fopen(filename, "w");

    if (fp == NULL)
    {
        printf("Unable to save data!\n");
        return;
    }
int i;
    for ( i = 0; i < count; i++)
    {
        fprintf(fp, "%d|%s|%s\n", students[i].id, students[i].name, students[i].grade);
    }

    fclose(fp);
    printf("Data successfully saved!\n");
}

void loadFromFile()
{
    FILE *fp = fopen(filename, "r");

    if (fp == NULL)
    {
        return;
    }

    while (fscanf(fp, "%d|%49[^|]|%s\n", &students[count].id, students[count].name, &students[count].grade) == 3)
    {
        count++;
    }

    fclose(fp);
    printf("Data successfully loaded!\n\n");
}

void addStudent()
{
    if (count >= 100) {
        printf("Student list is full!\n");
        return;
    }

    printf("Enter Student ID: ");
    scanf("%d", &students[count].id);
    getchar(); 

    printf("Enter Student Name: ");
    fgets(students[count].name, sizeof(students[count].name), stdin);
    students[count].name[strcspn(students[count].name, "\n")] = '\0';

    printf("Enter Student Grade: ");
    scanf("%s", students[count].grade);

    count++;
    saveToFile();

    printf("\nStudent added successfully!\n\n");
}

void viewStudents()
{
    if (count == 0)
    {
        printf("No students found!\n\n");
    }
    else
    {
        printf("List of Students:\n");
        printf("ID\tName\t\t\tGrade\n");
        printf("--------------------------------------------------\n");
      int i;
	    for ( i = 0; i < count; i++)
        {
            printf("%d\t%-24s\t%s\n", students[i].id, students[i].name, students[i].grade);
        }
        printf("\n");
    }
}

void searchStudent()
{
    int id, found = 0;

    printf("Enter Student ID to search: ");
    scanf("%d", &id);
int i;
    for (i = 0; i < count; i++)
    {
        if (students[i].id == id)
        {
            printf("\nStudent Found:\n");
            printf("ID: %d\n", students[i].id);
            printf("Name: %s\n", students[i].name);
            printf("Grade: %d\n\n", students[i].grade);
            found = 1;
            break;
        }
    }

    if (!found)
    {
        printf("\nStudent not found!\n\n");
    }
}
void updateStudent()
{
    int id, found = 0;

    printf("Enter Student ID to update: ");
    scanf("%d", &id);
    getchar(); 
int i;
    for (i = 0; i < count; i++)
    {
        if (students[i].id == id)
        {
            printf("Enter new Student Name: ");
            fgets(students[i].name, sizeof(students[i].name), stdin);
            students[i].name[strcspn(students[i].name, "\n")] = '\0';

            printf("Enter new Student Grade: ");
            scanf("%s", students[i].grade);

            saveToFile();
            printf("\nStudent updated successfully!\n\n");
            found = 1;
            break;
        }
    }

    if (!found)
    {
        printf("\nStudent not found!\n\n");
    }
}

void deleteStudent()
{
    int id, found = 0;

    printf("Enter Student ID to delete: ");
    scanf("%d", &id);
int i;
    for ( i = 0; i < count; i++)
    {
        if (students[i].id == id)
        {
        	int j;
            for ( j = i; j < count - 1; j++)
            {
                students[j] = students[j + 1];
            }

            count--;
            saveToFile();
            printf("\nStudent deleted successfully!\n\n");
            found = 1;
            break;
        }
    }

    if (!found)
    {
        printf("\nStudent not found!\n\n");
    }
}

int main()
{
    int choice;

    loadFromFile();

    do
    {
        printf("========== School Management System ==========\n");
        printf("1. Add Student\n");
        printf("2. View All Students\n");
        printf("3. Search Student by ID\n");
        printf("4. Update Student by ID\n");
        printf("5. Delete Student by ID\n");
        printf("6. Exit\n");
        printf("==============================================\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        printf("\n");

        switch (choice)
        {
            case 1: addStudent(); break;
            case 2: viewStudents(); break;
            case 3: searchStudent(); break;
            case 4: updateStudent(); break;
            case 5: deleteStudent(); break;
            case 6: printf("Goodbye!\n"); break;
            default: printf("Invalid choice! Please try again.\n\n"); break;
        }

    } while (choice != 6);

    return 0;
}